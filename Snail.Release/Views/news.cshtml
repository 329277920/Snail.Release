@{
    ViewData["Title"] = "news";
    Layout = "~/Views/layout.cshtml";
}

@using dbFac = Snail.Release.Business.Persistence.DbProviderManager
@using Snail.Release.Business.Model;
@{ var _release = new Snail.Release.Core.Release(Context); }
@{ var _db = dbFac.Get("sqlserver"); }


<div id="container">
    <p>fsdfd111</p>
    
    <video id="gum-local" autoplay playsinline></video>

    <div id="errorMsg"></div>
    
</div>


@*@{
    var newsInfo = await _db.SingleAsync<NewsInfo>(item => item.Id == _release.Params<int>(1));
    if (newsInfo != null)
    {
        <div>@newsInfo.Title + ":" + @newsInfo.Content</div>
    }
    else
    {
        <div>无记录</div>
    }
}*@

<script type="text/javascript" src="https://simplewebrtc.com/latest-v2.js"></script>
<script type="text/javascript">
    'use strict';
    alert(navigator.mediaDevices.getUserMedia);
    errorMsg(navigator.mediaDevices.getUserMedia);
  
    var errorElement = document.querySelector('#errorMsg');
    var video = document.querySelector('video');

    // Put variables in global scope to make them available to the browser console.
    var constraints = window.constraints = {
        audio: false,
        video: true
    };

    function handleSuccess(stream) {

        errorMsg("Hehe");

        var videoTracks = stream.getVideoTracks();
        console.log('Got stream with constraints:', constraints);
        console.log('Using video device: ' + videoTracks[0].label);
        stream.oninactive = function () {
            console.log('Stream inactive');
        };
        window.stream = stream; // make variable available to browser console
        video.srcObject = stream;
    }

    function handleError(error) {
        if (error.name === 'ConstraintNotSatisfiedError') {
            errorMsg('The resolution ' + constraints.video.width.exact + 'x' +
                constraints.video.width.exact + ' px is not supported by your device.');
        } else if (error.name === 'PermissionDeniedError') {
            errorMsg('Permissions have not been granted to use your camera and ' +
                'microphone, you need to allow the page access to your devices in ' +
                'order for the demo to work.');
        }
        errorMsg('getUserMedia error: ' + error.name, error);
    }

    function errorMsg(msg, error) {
        errorElement.innerHTML += '<p>' + msg + '</p>';
        if (typeof error !== 'undefined') {
            console.error(error);
        }
    }

    navigator.mediaDevices.getUserMedia(constraints).
        then(handleSuccess).catch(handleError);
   
</script>
